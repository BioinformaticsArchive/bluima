package ch.epfl.bbp.uima.topicmodels.estimator
/**
 * Contains case classes for estimation programs which holds the configurations generated by OptionParser
 */
sealed trait EstimationConfig {
  def testDocsPath: String
  def tokenFilePath: String
  def estimationCycles: Int
}

object EstimationConfig {
  val defaultCycles = 20
}

case class DCAConfig(rootDir: String = "", trainingCorpusSize : Int = Int.MinValue, stem: String = "", tests: String = "", tokenFile: String = "", cycles: Int = EstimationConfig.defaultCycles, averaged:Boolean=true) extends EstimationConfig {
  def testDocsPath = tests
  def tokenFilePath = {
    if (tokenFile == "") rootDir + "/" + stem + ".txtbag"
    else tokenFile
  }
  def estimationCycles = cycles
}

case class PLDAConfig(modelFile: String = "", alpha: Double = 0.0, beta: Double = 0.0, trainingCorpusSize : Int = 0, tests: String = "", tokenFile: String = "", cycles: Int = EstimationConfig.defaultCycles) extends EstimationConfig {
  def testDocsPath = tests
  def tokenFilePath = tokenFile
  def estimationCycles = cycles
}

case class MalletConfig(stateFile: String = "", tests: String = "", tokenFile: String = "", cycles: Int = EstimationConfig.defaultCycles) extends EstimationConfig {
  def testDocsPath = tests
  def tokenFilePath = tokenFile
  def estimationCycles = cycles
}

case class VowpalWabbitConfig(modelFile: String = "", alpha: Double = 0.0, beta: Double = 0.0, trainingCorpusSize : Int = 0, tests: String = "", tokenFile: String = "", cycles: Int = EstimationConfig.defaultCycles) extends EstimationConfig {
  def testDocsPath = tests
  def tokenFilePath = tokenFile
  def estimationCycles = cycles
}