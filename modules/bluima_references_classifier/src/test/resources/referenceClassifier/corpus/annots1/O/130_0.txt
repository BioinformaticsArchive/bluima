brought by high-level languages.
Time-sharing attacks a quite different
difficulty. Time-sharing preserves im-mediacy, and hence enables one to maintain an overview of complexity. The slow
turnaround of batch programming means
.
that one inevitably forgets the minutiae, if
not the very thrust, of what one was thinking when he stopped programming and
called for compilation and execution. This
interruption is costly in time, for one must
refresh one's memory. The most serious
effectmaywellbethedecayofthegraspof
all that is going on in a complex system.
Slow turnaround, like machine-language complexities, is an accidental rather
than an essential difficulty of the software
process. The limits of the potential contribution of time-sharing derive directly.
The principal effect of time-sharing is to
shorten system response time. As this
responsetimegoestozero, atsomepointit
passes the human threshold of noticeability, about 100 milliseconds. Beyond that
threshold, no benefits are to be expected.
